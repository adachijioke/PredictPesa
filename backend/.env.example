# =============================================================================
# PredictPesa Backend Environment Configuration
# =============================================================================

# Application Settings
APP_NAME=PredictPesa
APP_VERSION=1.0.0
APP_DESCRIPTION="DeFi-native prediction market platform on Hedera"
DEBUG=false
ENVIRONMENT=development

# Server Configuration
HOST=0.0.0.0
PORT=8000
WORKERS=4
RELOAD=true

# Security
SECRET_KEY=your-super-secret-key-change-this-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# CORS Settings
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]
CORS_CREDENTIALS=true
CORS_METHODS=["GET", "POST", "PUT", "DELETE", "OPTIONS"]
CORS_HEADERS=["*"]

# Database Configuration
DATABASE_URL=postgresql+asyncpg://predictpesa:password@localhost:5432/predictpesa_db
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30
DATABASE_POOL_TIMEOUT=30
DATABASE_POOL_RECYCLE=3600

# Redis Configuration
REDIS_URL=redis://localhost:6379/0
REDIS_POOL_SIZE=10
REDIS_SOCKET_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5

# Celery Configuration
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/2
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_ACCEPT_CONTENT=["json"]
CELERY_TIMEZONE=UTC
CELERY_ENABLE_UTC=true

# Hedera Network Configuration
HEDERA_NETWORK=testnet
HEDERA_ACCOUNT_ID=0.0.123456
HEDERA_PRIVATE_KEY=your-hedera-private-key-here
HEDERA_MIRROR_NODE_URL=https://testnet.mirrornode.hedera.com
HEDERA_JSON_RPC_URL=https://testnet.hashio.io/api

# Smart Contract Addresses (Testnet)
MARKET_FACTORY_CONTRACT=0x1234567890123456789012345678901234567890
STAKING_VAULT_CONTRACT=0x2345678901234567890123456789012345678901
AMM_POOL_CONTRACT=0x3456789012345678901234567890123456789012

# Token Addresses
WBTC_TOKEN_ADDRESS=0x4567890123456789012345678901234567890123
YES_BTC_TOKEN_ID=0.0.789012
NO_BTC_TOKEN_ID=0.0.789013

# External APIs
CHAINLINK_API_KEY=your-chainlink-api-key
COINBASE_API_KEY=your-coinbase-api-key
COINBASE_API_SECRET=your-coinbase-api-secret
BINANCE_API_KEY=your-binance-api-key
BINANCE_API_SECRET=your-binance-api-secret

# AI Configuration
GROQ_API_KEY=gsk-your-groq-api-key-here
GROQ_MODEL=llama3-70b-8192
GROQ_MAX_TOKENS=2000
GROQ_TEMPERATURE=0.7

# Hugging Face (for local NLP models)
HUGGINGFACE_API_KEY=your-huggingface-api-key
HUGGINGFACE_MODEL_NAME=microsoft/DialoGPT-medium

# Oracle Configuration
ORACLE_CONFIDENCE_THRESHOLD=0.95
ORACLE_MIN_SOURCES=3
ORACLE_SETTLEMENT_DELAY_HOURS=24
ORACLE_DISPUTE_PERIOD_HOURS=72

# Market Configuration
MIN_STAKE_AMOUNT=0.001
MAX_STAKE_AMOUNT=10.0
MARKET_CREATION_FEE=0.01
PROTOCOL_FEE_PERCENTAGE=0.1
MARKET_DURATION_MIN_HOURS=1
MARKET_DURATION_MAX_DAYS=365

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST=20

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=logs/predictpesa.log
LOG_ROTATION=1 day
LOG_RETENTION=30 days

# Monitoring & Metrics
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
SENTRY_DSN=your-sentry-dsn-here
SENTRY_ENVIRONMENT=development

# File Storage
UPLOAD_MAX_SIZE=10485760  # 10MB
UPLOAD_ALLOWED_EXTENSIONS=["jpg", "jpeg", "png", "pdf", "json"]
STORAGE_BACKEND=local  # local, s3, ipfs
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_BUCKET_NAME=predictpesa-storage
AWS_REGION=us-east-1

# IPFS Configuration
IPFS_NODE_URL=https://ipfs.infura.io:5001
IPFS_PROJECT_ID=your-ipfs-project-id
IPFS_PROJECT_SECRET=your-ipfs-project-secret

# Email Configuration (for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=noreply@predictpesa.com
SMTP_PASSWORD=your-email-password
SMTP_TLS=true

# Mobile/SMS Configuration
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=+1234567890

# Feature Flags
ENABLE_MARKET_CREATION=true
ENABLE_STAKING=true
ENABLE_AI_SUGGESTIONS=true
ENABLE_MOBILE_USSD=false
ENABLE_SYNTHETIC_INDICES=false
ENABLE_YIELD_FARMING=false

# Geographic Configuration
DEFAULT_TIMEZONE=UTC
SUPPORTED_COUNTRIES=["NG", "KE", "GH", "ZA", "UG", "TZ", "RW"]
DEFAULT_CURRENCY=USD
SUPPORTED_CURRENCIES=["USD", "NGN", "KES", "GHS", "ZAR", "UGX", "TZS", "RWF"]

# Testing Configuration
TEST_DATABASE_URL=postgresql+asyncpg://test:test@localhost:5432/predictpesa_test
TEST_REDIS_URL=redis://localhost:6379/15
